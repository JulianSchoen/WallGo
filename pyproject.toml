[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "WallGo"
dynamic = ["version"]
authors = [
    {name = "Andreas Ekstedt", email = "andreas.ekstedt@desy.de"},
    {name = "Oliver Gould", email = "oliver.gould@nottingham.ac.uk"},
    {name = "Joonas Hirvonen", email = "joonas.o.hirvonen@helsinki.fi"},
    {name = "Benoit Laurent", email = "benoit.laurent@mail.mcgill.ca"},
    {name = "Lauri Niemi", email = "lauri.b.niemi@helsinki.fi"},
    {name = "Philipp Schicho", email = "schicho@itp.uni-frankfurt.de"},
    {name = "Tuomas Tenkanen", email = "tuomas.tenkanen@su.se"},
    {name = "Jorinde van de Vis", email = "j.m.vandevis@uu.nl"},
]
description = "A package for computing the bubble wall speed"
license = {text = "MIT"}
classifiers = [
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.10"
dependencies = [
    "findiff>=0.9.2",
    "h5py>=3.8.0",
    "numpy>=1.21.5",
    "scipy>=1.9.0",
]
readme = "README.rst"

[project.optional-dependencies]
collisions = [
    "pybind11[global]>=0.1.35"
]
tests = [
    "pytest>=7.2.2",
]
docs = [
    "graphviz",
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-automodapi",
]
lint = [
    "black",
    "pylint",
    "mypy",
]

[project.urls]
"Homepage" = "https://wallspeed.readthedocs.io/"
"Repository" = "https://github.com/Wall-Go/WallGo"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["WallGo"]
#exclude = [ ... ]

[tool.setuptools.package-data]
# specify data files relative to packages. These need to be located inside the package. Including files from outside packages is apparently deprecated
WallGo = ["Config/*.ini", "Data/*"]

[tool.setuptools_scm]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pylint.main]
max-line-length = 88
indent-string = "    "

[tool.pylint.basic]
# naming styles: PEP8 except camelCase instead of snake_case
argument-naming-style = "camelCase"
attr-naming-style = "camelCase"
class-naming-style = "PascalCase"
class-attribute-naming-style = "camelCase"
class-const-naming-style = "UPPER_CASE"
const-naming-style = "UPPER_CASE"
function-naming-style = "camelCase"
inlinevar-naming-style = "camelCase"
method-naming-style = "camelCase"
module-naming-style = "camelCase"
variable-naming-style = "camelCase"

[tool.mypy]
warn_return_any = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
